---
# tasks file for pwsh-install

- when: working_dir is not defined
  block:
    - when: ansible_facts is not defined
      ansible.builtin.gather_facts:

- name: "Create working directory"
  ansible.builtin.win_file:
    path: "{{ role_working_dir }}"
    state: "directory"

- name: "Download powershell core package"
  ansible.windows.win_get_url:
    dest: "{{ pwsh_installer_dest }}"
    url: "{{ pwsh_download_url }}"

- name: "Install powershell core"
  ansible.windows.win_package:
    arguments:
      - "ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1"
      - "ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1"
      - "ADD_PATH=1"
      - "REGISTER_MANIFEST=1"
      - "USE_MU=1"
      - "ENABLE_MU=1"
    chdir: "{{ pwsh_installer_dest | win_dirname }}"
    log_path: "{{ pwsh_installer_log }}"
    path: "{{ pwsh_installer_dest }}"
    product_id: "{{ pwsh_product_id }}"
    provider: "msi"
    state: "present"
  become: true
  become_user: "SYSTEM"
  become_method: "runas"

- name: "Search for path to pwsh.exe"
  ansible.windows.win_powershell:
    script: "{{ lookup('ansible.builtin.file', 'get-pwsh-exe-path.ps1') }}"
  changed_when: false
  register: get_pwsh_exe_path

- name: "Create static variables"
  ansible.builtin.set_fact:
    pwsh_exe_long_path: "{{ (['first'] + get_pwsh_exe_path.output)[-1] }}"
    pwsh_exe_short_path: "{{ (['first'] + get_pwsh_exe_path.output)[-2] }}"

- name: "Add powershell core to path environment variable"
  ansible.windows.win_powershell:
    arguments: ["-ExecutionPolicy", "UnRestricted", "-NonInteractive", "-NoLogo"]
    error_action: "stop"
    script: "{{ lookup('ansible.builtin.file', 'add-pwsh-to-path.ps1') }}"
  register: add_pwsh_to_path
  environment:
    pwsh_exe_path: "{{ pwsh_exe_long_path }}"
  changed_when: (['first'] + add_pwsh_to_path.output) | last is match('.*Added PowerShell Core to PATH')

- when: add_ssh_pwsh_subsystem|default(false) or set_pwsh_as_ssh_default_shell|default(false)
  block:
    ## if OpenSSH server is not installed this task will fail
    - name: "Check if OpenSSH server is installed"
      ansible.windows.win_powershell:
        script: "{{ lookup('ansible.builtin.file', 'is-openssh-server-installed.ps1') }}"
      changed_when: false

- when: add_ssh_pwsh_subsystem|default(false)
  ansible.builtin.include_tasks: "ssh_pwsh_subsystem.yml"

- when: set_pwsh_as_ssh_default_shell|default(false)
  ansible.builtin.include_tasks: "pwsh_as_ssh_default_shell.yml"
